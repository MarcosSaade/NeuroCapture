"""initial schema

Revision ID: 6096f7087925
Revises: 
Create Date: 2025-05-02 19:55:45.390943

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6096f7087925'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('interpretations',
    sa.Column('interpretation_id', sa.Integer(), nullable=False),
    sa.Column('interpreter_id', sa.Integer(), nullable=True),
    sa.Column('interpretation_text', sa.Text(), nullable=False),
    sa.Column('interpretation_date', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('interpretation_id')
    )
    op.create_index(op.f('ix_interpretations_interpretation_id'), 'interpretations', ['interpretation_id'], unique=False)
    op.create_table('model_predictions',
    sa.Column('prediction_id', sa.Integer(), nullable=False),
    sa.Column('model_name', sa.String(length=100), nullable=False),
    sa.Column('model_version', sa.String(length=50), nullable=True),
    sa.Column('predicted_class', sa.String(length=50), nullable=False),
    sa.Column('prediction_probability', sa.Float(), nullable=True),
    sa.Column('prediction_date', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('prediction_id')
    )
    op.create_index(op.f('ix_model_predictions_prediction_id'), 'model_predictions', ['prediction_id'], unique=False)
    op.create_table('patients',
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('study_identifier', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('patient_id'),
    sa.UniqueConstraint('study_identifier')
    )
    op.create_index(op.f('ix_patients_patient_id'), 'patients', ['patient_id'], unique=False)
    op.create_table('accelerometer_data',
    sa.Column('acc_data_id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('session_date', sa.DateTime(), nullable=False),
    sa.Column('device_type', sa.String(length=50), nullable=True),
    sa.Column('sampling_rate', sa.Float(), nullable=True),
    sa.Column('activity_type', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.patient_id'], ),
    sa.PrimaryKeyConstraint('acc_data_id')
    )
    op.create_index(op.f('ix_accelerometer_data_acc_data_id'), 'accelerometer_data', ['acc_data_id'], unique=False)
    op.create_table('cognitive_assessments',
    sa.Column('assessment_id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('assessment_date', sa.DateTime(), nullable=False),
    sa.Column('assessment_type', sa.String(length=50), nullable=False),
    sa.Column('score', sa.Float(), nullable=False),
    sa.Column('max_possible_score', sa.Float(), nullable=True),
    sa.Column('diagnosis', sa.String(length=50), nullable=True),
    sa.Column('duration_total_minutes', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.patient_id'], ),
    sa.PrimaryKeyConstraint('assessment_id')
    )
    op.create_index(op.f('ix_cognitive_assessments_assessment_id'), 'cognitive_assessments', ['assessment_id'], unique=False)
    op.create_table('demographics',
    sa.Column('demographic_id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('age', sa.Integer(), nullable=False),
    sa.Column('gender', sa.String(length=10), nullable=False),
    sa.Column('education_years', sa.Integer(), nullable=True),
    sa.Column('collection_date', sa.Date(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.patient_id'], ),
    sa.PrimaryKeyConstraint('demographic_id')
    )
    op.create_index(op.f('ix_demographics_demographic_id'), 'demographics', ['demographic_id'], unique=False)
    op.create_table('openpose_data',
    sa.Column('openpose_id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('session_date', sa.DateTime(), nullable=False),
    sa.Column('video_file_path', sa.String(length=255), nullable=False),
    sa.Column('frame_rate', sa.Float(), nullable=True),
    sa.Column('activity_type', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.patient_id'], ),
    sa.PrimaryKeyConstraint('openpose_id')
    )
    op.create_index(op.f('ix_openpose_data_openpose_id'), 'openpose_data', ['openpose_id'], unique=False)
    op.create_table('accelerometer_readings',
    sa.Column('reading_id', sa.Integer(), nullable=False),
    sa.Column('acc_data_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('x_axis', sa.Float(), nullable=False),
    sa.Column('y_axis', sa.Float(), nullable=False),
    sa.Column('z_axis', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['acc_data_id'], ['accelerometer_data.acc_data_id'], ),
    sa.PrimaryKeyConstraint('reading_id')
    )
    op.create_index(op.f('ix_accelerometer_readings_reading_id'), 'accelerometer_readings', ['reading_id'], unique=False)
    op.create_table('audio_recordings',
    sa.Column('recording_id', sa.Integer(), nullable=False),
    sa.Column('assessment_id', sa.Integer(), nullable=False),
    sa.Column('file_path', sa.String(length=255), nullable=False),
    sa.Column('filename', sa.String(length=100), nullable=False),
    sa.Column('recording_date', sa.DateTime(), nullable=False),
    sa.Column('recording_device', sa.String(length=50), nullable=True),
    sa.Column('task_type', sa.String(length=100), nullable=True),
    sa.Column('interpretation_id', sa.Integer(), nullable=True),
    sa.Column('prediction_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['assessment_id'], ['cognitive_assessments.assessment_id'], ),
    sa.ForeignKeyConstraint(['interpretation_id'], ['interpretations.interpretation_id'], ),
    sa.ForeignKeyConstraint(['prediction_id'], ['model_predictions.prediction_id'], ),
    sa.PrimaryKeyConstraint('recording_id')
    )
    op.create_index(op.f('ix_audio_recordings_recording_id'), 'audio_recordings', ['recording_id'], unique=False)
    op.create_table('openpose_keypoints',
    sa.Column('keypoint_id', sa.Integer(), nullable=False),
    sa.Column('openpose_id', sa.Integer(), nullable=False),
    sa.Column('frame_number', sa.Integer(), nullable=False),
    sa.Column('keypoint_index', sa.Integer(), nullable=False),
    sa.Column('keypoint_name', sa.String(length=50), nullable=True),
    sa.Column('x_position', sa.Float(), nullable=False),
    sa.Column('y_position', sa.Float(), nullable=False),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['openpose_id'], ['openpose_data.openpose_id'], ),
    sa.PrimaryKeyConstraint('keypoint_id')
    )
    op.create_index(op.f('ix_openpose_keypoints_keypoint_id'), 'openpose_keypoints', ['keypoint_id'], unique=False)
    op.create_table('audio_features',
    sa.Column('feature_id', sa.Integer(), nullable=False),
    sa.Column('recording_id', sa.Integer(), nullable=False),
    sa.Column('feature_name', sa.String(length=50), nullable=False),
    sa.Column('feature_value', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['recording_id'], ['audio_recordings.recording_id'], ),
    sa.PrimaryKeyConstraint('feature_id')
    )
    op.create_index(op.f('ix_audio_features_feature_id'), 'audio_features', ['feature_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_audio_features_feature_id'), table_name='audio_features')
    op.drop_table('audio_features')
    op.drop_index(op.f('ix_openpose_keypoints_keypoint_id'), table_name='openpose_keypoints')
    op.drop_table('openpose_keypoints')
    op.drop_index(op.f('ix_audio_recordings_recording_id'), table_name='audio_recordings')
    op.drop_table('audio_recordings')
    op.drop_index(op.f('ix_accelerometer_readings_reading_id'), table_name='accelerometer_readings')
    op.drop_table('accelerometer_readings')
    op.drop_index(op.f('ix_openpose_data_openpose_id'), table_name='openpose_data')
    op.drop_table('openpose_data')
    op.drop_index(op.f('ix_demographics_demographic_id'), table_name='demographics')
    op.drop_table('demographics')
    op.drop_index(op.f('ix_cognitive_assessments_assessment_id'), table_name='cognitive_assessments')
    op.drop_table('cognitive_assessments')
    op.drop_index(op.f('ix_accelerometer_data_acc_data_id'), table_name='accelerometer_data')
    op.drop_table('accelerometer_data')
    op.drop_index(op.f('ix_patients_patient_id'), table_name='patients')
    op.drop_table('patients')
    op.drop_index(op.f('ix_model_predictions_prediction_id'), table_name='model_predictions')
    op.drop_table('model_predictions')
    op.drop_index(op.f('ix_interpretations_interpretation_id'), table_name='interpretations')
    op.drop_table('interpretations')
    # ### end Alembic commands ###
